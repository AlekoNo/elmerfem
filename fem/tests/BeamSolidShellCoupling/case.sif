!---------------------------------------------------------
! Case for solving solid and shell equations as coupled.
! Note: equality of moments still missing!
!
! P.R. 3.9.2019
!------------------------------------------------------------

Header
  Mesh DB "." "beam"
  Include Path ""
  Results Directory ""
End 

Simulation
  Max Output Level = 7
  Coordinate System = Cartesian
  Simulation Type = Steady State
  Output Intervals = 1
  Steady State Max Iterations = 1

  Post File = case.vtu
End

Body 1
  Name = "Body1"
  Equation = 1
  Material = 1 
End

Body 2
  Name = "Body2"
End

Body 3
  Name = "Body3"
  Equation = 2
  Material = 1
  Body Force = 1 
End


Body Force 1
  Name = "ShellBF"
  Normal Pressure = 1e4
End 


Equation 1
  Name = "Elasticity"
  Active Solvers = 1 
End

Equation 2
  Name = "Shell"
  Active Solvers = 2 
End


Material 1
  Name = "Ideal"
  Youngs Modulus = 1.0e9
  Density = 1.0e3
  Poisson Ratio = 0.3
  Shell Thickness = 0.05
End


Solver 1
  Equation = LinElast
  Variable = -dofs 3 Displacement
  Procedure = "StressSolve" "StressSolver"

  Nonlinear System Max Iterations = 1
  Nonlinear System Consistent Norm = Logical True
  Linear System Solver = direct
  Linear System Direct Method = MUMPS
  Linear System Scaling = False
  Optimize Bandwidth = False

! The index of master structure is assumed to "1" and the
! other solver is defined here.
  Structure-Structure Coupling = Logical True
  Shell Solver Index = Integer 2

! Enforces the block mode when solving the system
  Linear System Block Mode = Logical True

! Define the solvers that build the block system
! Block system can also be created from components of one solver but not in this case.
  Block Solvers(2) = Integer 1 2

! Call the assembly for the 2nd solver using the slave solver slot.
! Could probably be called also otherwise as far as before. 
  Pre Solvers(1) = 2
  
  Linear System Block Method = String "other"
  Block Preconditioner = Logical True ! default
  Block Gauss-Seidel = Logical True   ! if false, jacobi

  Outer: Linear System Solver = string "Iterative"
  Outer: Linear System Convergence Tolerance = real 1e-6
  Outer: Linear System Iterative Method = string GCR
  Outer: Linear System GCR Restart = Integer 50
  Outer: Linear System Residual Output = integer 1
  Outer: Linear System Max Iterations = integer 50
  Outer: Linear System Min Iterations = integer 3

! We don't want to displace mesh in this test since only "A" would
! be displaced, not "B". 
  Displace Mesh = False
End


Solver 2
  Equation = "Shell equations"
  Procedure = "ShellSolver" "ShellSolver"

  Linear System Solver = "Direct"
  Linear System Direct Method = MUMPS

  Steady State Convergence Tolerance = 1e-09
  Nonlinear System Convergence Tolerance = 1e-8
  Nonlinear System Max Iterations = 1

! The defaults are True for the following 2 keywords:
  Linear System Scaling = False
  Optimize Bandwidth = False

  Exec Solver = never
  Linear System Solver Disabled = Logical True  
End


Solver 3
  Exec Solver = never
  Equation = SaveScalars
  Procedure = "SaveData" "SaveScalars"
  
  Filename = f.dat
  File Append = Logical True
  Parallel Reduce = Logical True

  Variable 1 = Displacement
  Operator 1 = dofs
  Operator 2 = partitions
  Operator 3 = max abs 
  Operator 4 = norm
  Operator 5 = min
  Operator 6 = max
End 


Boundary Condition 1
  Name = "LeftWall"
  Target Boundaries(1) = 1
  Displacement 1 = 0.0
  Displacement 2 = 0.0
  Displacement 3 = 0.0
End

Boundary Condition 2
  Name = "RightWall"
  Target Boundaries(1) = 2
  U 1 = Real 0.0
  U 2 = Real 0.0
  U 3 = Real 0.0
  DNU 1 = Real 0
  DNU 2 = Real 0
  DNU 3 = Real 0
End

Boundary Condition 3
  Name = "LeftTop"
  Target Boundaries(1) = 3 
  Normal Force = 1.0e4
End

Boundary Condition 4
  Name = "RightTop"
  Target Boundaries(1) = 4
  Body Id = 3
End



Solver 1:: Reference Norm = 1.63284532E-02 



